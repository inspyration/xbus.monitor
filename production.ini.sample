###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/environment.html
###

[app:main]
use = egg:xbus.monitor

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en_US
pyramid.includes =
    pyramid_tm

fig.sqlalchemy.url = postgresql://xbus:xbus@{socket}/xbus
fig.sqlalchemy.default.socket = localhost:5432

# pyramid_httpauth settings.
# <https://github.com/tarzanjw/pyramid_httpauth>

# default schema to challenge client (digest or basic), default=digest
httpauth.schema = basic # Should be "digest" in the real world.

# realm string for auth challenge header
httpauth.realm = xbus_monitor

# qop string for auth challenge header (used for Digest Auth only)
# httpauth.qop

# name of NonceManager class to use (used for Digest Auth only)
# httpauth.nonce_manager

# The secret key used to sign on nounce, used for built-in SignedNonceManager (if
# httpauth.nonce_manager is not provided).
# httpauth.nonce_manager_secret

# domain string for auth challenge header
# httpauth.domain

# name of password-retrieval function
httpauth.get_password = xbus.monitor.http_auth:get_user_password

# name of group-finder callback function
httpauth.groupfinder = xbus.monitor.http_auth:get_user_principals

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/logging.html
###

[loggers]
keys = root, monitor, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_monitor]
level = DEBUG
handlers =
qualname = monitor

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
